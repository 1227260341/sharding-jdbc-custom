
server:
  port: 8881
  
spring:
  application:
    name: demo
    
#  profiles:
#    active: sit
  jmx:
    default-domain: e-s
  resources.static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/templates/,classpath:/public/,file:/www/ecampus/static/
#  datasource:
#    #type: com.zaxxer.hikari.HikariDataSource
#    driverClassName: com.mysql.jdbc.Driver
##    url: jdbc:mysql://192.168.3.30:3306/ecampus_new?characterEncoding=utf-8
##    url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&serverTimezone=UTC
#    url: jdbc:mysql://jyf-sit-03:3308/custom_refashion?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&failOverReadOnly=false&useAffectedRows=true&serverTimezone=UTC
#    username: root
#    password: root
##    url: jdbc:mysql://117.169.66.118:3306/ecampus_new?characterEncoding=utf-8
##    username: test
##    password: 21szxymysql
#    type: com.alibaba.druid.pool.DruidDataSource
#    initialSize: 5
#    minIdle: 5
#    maxActive: 20
#    maxWait: 60000
#    timeBetweenEvictionRunsMillis: 60000
#    minEvictableIdleTimeMillis: 30000
#    validationQuery: select 'x'
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    poolPreparedStatements: true
#    maxPoolPreparedStatementPerConnectionSize: 20
#    filters: stat,wall,slf4j
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    
    #控制台打印sql
  shardingsphere:
    
    props:
      sql:
        show: true
    datasource:
      names: master04091,master04092
      master04091:
#        type: com.zaxxer.hikari.HikariDataSourc
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        jdbc-url: jdbc:mysql://localhost:3306/master04091?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=GMT%2B8
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/master04091?useSSL=false&serverTimezone=GMT
        username: root
        password: root
      master04092:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        jdbc-url: jdbc:mysql://localhost:3306/master04092?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=GMT%2B8
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/master04092?useSSL=false&serverTimezone=GMT
        username: root
        password: root
        
        # 配置进行分库的字段
    sharding:
        default-database-strategy:
          standard:
                        # 具体的配置规则我们会在自定义类中指定，也就是这个PreciseModuloDatabaseShardingAlgorithm类，这写自定义类路径
            precise-algorithm-class-name: com.zj.content.utils.PreciseModuloDatabaseShardingAlgorithm
            sharding-column: create_time
          
        default-table-strategy:
          standard:
            sharding-column: create_time
            precise-algorithm-class-name: com.zj.content.utils.PreciseModuloTableShardingAlgorithm
        
        tables:
          tab_user:
            actual-data-nodes: master0409$->{1..2}.tab_user$->{0..4}
              
#          t_order:
#            actual-data-nodes: master0409$->{1}.t_order
        
#        binding-tables: tab_user
#        binding-tables[1]: t_order
#        broadcast-tables: t_order
        default-data-source-name: master04091
        
        
          
      
  main:
    allow-bean-definition-overriding: true
  
    
      
      
      
      
# 打印sql
#logging:
#  level:
#     com.zj.demo.mapper : debug


#mybatis
#mybatis:
#  config-location: classpath:mybatis-config.xml
#  type-aliases-package: com.zj.demo.entity
#  type-handlers-package: com.zj.demo.mapper
#  mapper-locations: classpath:/mapper/*.xml


mybatis-plus:
  #外部化xml配置
#  config-location: classpath:mybatis-config.xml
  mapper-locations: classpath*:/mapper/**Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.zj.content.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    #自定义SQL注入器
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
    
  #此处得 与 config-location 配置得 是一样得， 不能同时 存在
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #主键自动生成并获取
    use-generated-keys: true
      


